{"version":3,"names":["React","Animated","StyleSheet","View","I18nManager","Platform","TabBarItem","TabBarIndicator","TabBar","Component","layout","width","height","tabWidths","Value","createRef","style","tabStyle","flatten","undefined","index","routes","scrollEnabled","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","length","tabBarWidth","layoutWidth","props","state","navigationState","reduce","acc","_","i","getComputedTabWidth","getFlattenedTabWidth","value","getTabBarWidth","maxDistance","getMaxScrollDistance","scrollValue","Math","max","min","OS","isRTL","centerDistance","Array","from","total","tabWidth","scrollAmount","normalizeScrollValue","scrollViewRef","current","scrollTo","x","getScrollAmount","animated","e","nativeEvent","setState","maxScrollDistance","multiply","add","componentDidUpdate","prevProps","prevState","every","r","resetScroll","render","position","jumpTo","bounces","getAccessibilityLabel","getAccessible","getLabelText","getTestID","renderBadge","renderIcon","renderLabel","renderTabBarItem","activeColor","inactiveColor","pressColor","pressOpacity","onTabPress","onTabLongPress","labelStyle","indicatorStyle","contentContainerStyle","indicatorContainerStyle","isWidthDynamic","tabBarWidthPercent","translateX","getTranslateX","handleLayout","styles","tabBar","indicatorContainer","transform","renderIndicator","getTabWidth","scroll","tabContent","container","event","contentOffset","useNativeDriver","map","route","onLayout","measuredTabWidths","onPress","defaultPrevented","preventDefault","onLongPress","title","accessible","accessibilityLabel","testID","create","flex","overflow","select","default","web","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"sources":["TabBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ScrollView,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport TabBarItem, { Props as TabBarItemProps } from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport type {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  Event,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  renderTabBarItem?: (\n    props: TabBarItemProps<T> & { key: string }\n  ) => React.ReactElement;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n  tabWidths: { [key: string]: number };\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) => route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state: State = {\n    layout: { width: 0, height: 0 },\n    tabWidths: {},\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    const { navigationState } = this.props;\n    const { layout, tabWidths } = this.state;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        navigationState.routes.length ||\n      prevProps.navigationState.index !== navigationState.index ||\n      prevState.layout.width !== layout.width ||\n      prevState.tabWidths !== tabWidths\n    ) {\n      if (\n        this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' &&\n        !(\n          layout.width &&\n          navigationState.routes.every(\n            (r) => typeof tabWidths[r.key] === 'number'\n          )\n        )\n      ) {\n        // When tab width is dynamic, only adjust the scroll once we have all tab widths and layout\n        return;\n      }\n\n      this.resetScroll(navigationState.index);\n    }\n  }\n\n  // to store the layout.width of each tab\n  // when all onLayout's are fired, this would be set in state\n  private measuredTabWidths: { [key: string]: number } = {};\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollViewRef = React.createRef<ScrollView>();\n\n  private getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n    const tabStyle = StyleSheet.flatten(style);\n\n    return tabStyle ? tabStyle.width : undefined;\n  };\n\n  private getComputedTabWidth = (\n    index: number,\n    layout: Layout,\n    routes: Route[],\n    scrollEnabled: boolean | undefined,\n    tabWidths: { [key: string]: number },\n    flattenedWidth: string | number | undefined\n  ) => {\n    if (flattenedWidth === 'auto') {\n      return tabWidths[routes[index].key] || 0;\n    }\n\n    switch (typeof flattenedWidth) {\n      case 'number':\n        return flattenedWidth;\n      case 'string':\n        if (flattenedWidth.endsWith('%')) {\n          const width = parseFloat(flattenedWidth);\n          if (Number.isFinite(width)) {\n            return layout.width * (width / 100);\n          }\n        }\n    }\n\n    if (scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / routes.length;\n  };\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private getTabBarWidth = (props: Props<T>, state: State) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    return routes.reduce<number>(\n      (acc, _, i) =>\n        acc +\n        this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        ),\n      0\n    );\n  };\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const tabBarWidth = this.getTabBarWidth(props, state);\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, index: number) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    const centerDistance = Array.from({ length: index + 1 }).reduce<number>(\n      (total, _, i) => {\n        const tabWidth = this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        );\n\n        // To get the current index centered we adjust scroll amount by width of indexes\n        // 0 through (i - 1) and add half the width of current index i\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      },\n      0\n    );\n\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (index: number) => {\n    if (this.props.scrollEnabled) {\n      this.scrollViewRef.current?.scrollTo({\n        x: this.getScrollAmount(this.props, this.state, index),\n        animated: true,\n      });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  private getTranslateX = (\n    scrollAmount: Animated.Value,\n    maxScrollDistance: number\n  ) =>\n    Animated.multiply(\n      Platform.OS === 'android' && I18nManager.isRTL\n        ? Animated.add(maxScrollDistance, Animated.multiply(scrollAmount, -1))\n        : scrollAmount,\n      I18nManager.isRTL ? 1 : -1\n    );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      renderTabBarItem,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n      indicatorContainerStyle,\n    } = this.props;\n    const { layout, tabWidths } = this.state;\n    const { routes } = navigationState;\n\n    const isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n    const tabBarWidth = this.getTabBarWidth(this.props, this.state);\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n            indicatorContainerStyle,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: isWidthDynamic ? 'auto' : `${100 / routes.length}%`,\n            style: indicatorStyle,\n            getTabWidth: (i: number) =>\n              this.getComputedTabWidth(\n                i,\n                layout,\n                routes,\n                scrollEnabled,\n                tabWidths,\n                this.getFlattenedTabWidth(tabStyle)\n              ),\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            accessibilityRole=\"tablist\"\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event(\n              [\n                {\n                  nativeEvent: {\n                    contentOffset: { x: this.scrollAmount },\n                  },\n                },\n              ],\n              { useNativeDriver: true }\n            )}\n            ref={this.scrollViewRef}\n          >\n            {routes.map((route: T) => {\n              const props: TabBarItemProps<T> & { key: string } = {\n                key: route.key,\n                position: position,\n                route: route,\n                navigationState: navigationState,\n                getAccessibilityLabel: getAccessibilityLabel,\n                getAccessible: getAccessible,\n                getLabelText: getLabelText,\n                getTestID: getTestID,\n                renderBadge: renderBadge,\n                renderIcon: renderIcon,\n                renderLabel: renderLabel,\n                activeColor: activeColor,\n                inactiveColor: inactiveColor,\n                pressColor: pressColor,\n                pressOpacity: pressOpacity,\n                onLayout: isWidthDynamic\n                  ? (e) => {\n                      this.measuredTabWidths[route.key] =\n                        e.nativeEvent.layout.width;\n\n                      // When we have measured widths for all of the tabs, we should updates the state\n                      // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                      if (\n                        routes.every(\n                          (r) =>\n                            typeof this.measuredTabWidths[r.key] === 'number'\n                        )\n                      ) {\n                        this.setState({\n                          tabWidths: { ...this.measuredTabWidths },\n                        });\n                      }\n                    }\n                  : undefined,\n                onPress: () => {\n                  const event: Scene<T> & Event = {\n                    route,\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                      event.defaultPrevented = true;\n                    },\n                  };\n\n                  onTabPress?.(event);\n\n                  if (event.defaultPrevented) {\n                    return;\n                  }\n\n                  this.props.jumpTo(route.key);\n                },\n                onLongPress: () => onTabLongPress?.({ route }),\n                labelStyle: labelStyle,\n                style: tabStyle,\n              };\n\n              return renderTabBarItem ? (\n                renderTabBarItem(props)\n              ) : (\n                <TabBarItem {...props} />\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"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"}