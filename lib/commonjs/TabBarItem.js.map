{"version":3,"names":["DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","TabBarItem","React","Component","position","routes","tabIndex","length","inputRange","map","_","i","interpolate","outputRange","render","route","navigationState","renderLabel","renderLabelCustom","renderIcon","renderBadge","getLabelText","getTestID","getAccessibilityLabel","getAccessible","activeColor","activeColorCustom","inactiveColor","inactiveColorCustom","pressColor","pressOpacity","labelStyle","style","onLayout","onPress","onLongPress","props","indexOf","isFocused","index","labelColorFromStyle","StyleSheet","flatten","color","undefined","activeOpacity","getActiveOpacity","inactiveOpacity","getInactiveOpacity","icon","label","activeIcon","focused","inactiveIcon","styles","opacity","absoluteFill","labelText","marginTop","activeLabel","inactiveLabel","tabStyle","isWidthSet","width","tabContainerStyle","flex","scene","accessibilityLabel","badge","borderless","selected","pressable","item","create","margin","backgroundColor","textTransform","alignItems","justifyContent","padding","minHeight","top","right"],"sources":["TabBarItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  StyleProp,\n  LayoutChangeEvent,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport PlatformPressable from './PlatformPressable';\nimport type { Scene, Route, NavigationState } from './types';\n\nexport type Props<T extends Route> = {\n  position: Animated.AnimatedInterpolation;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nexport default class TabBarItem<T extends Route> extends React.Component<\n  Props<T>\n> {\n  private getActiveOpacity = (\n    position: Animated.AnimatedInterpolation,\n    routes: Route[],\n    tabIndex: number\n  ) => {\n    if (routes.length > 1) {\n      const inputRange = routes.map((_, i) => i);\n\n      return position.interpolate({\n        inputRange,\n        outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n      });\n    } else {\n      return 1;\n    }\n  };\n\n  private getInactiveOpacity = (\n    position: Animated.AnimatedInterpolation,\n    routes: Route[],\n    tabIndex: number\n  ) => {\n    if (routes.length > 1) {\n      const inputRange = routes.map((_: Route, i: number) => i);\n\n      return position.interpolate({\n        inputRange,\n        outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n      });\n    } else {\n      return 0;\n    }\n  };\n\n  render() {\n    const {\n      route,\n      position,\n      navigationState,\n      renderLabel: renderLabelCustom,\n      renderIcon,\n      renderBadge,\n      getLabelText,\n      getTestID,\n      getAccessibilityLabel,\n      getAccessible,\n      activeColor: activeColorCustom,\n      inactiveColor: inactiveColorCustom,\n      pressColor,\n      pressOpacity,\n      labelStyle,\n      style,\n      onLayout,\n      onPress,\n      onLongPress,\n    } = this.props;\n\n    const tabIndex = navigationState.routes.indexOf(route);\n    const isFocused = navigationState.index === tabIndex;\n\n    const labelColorFromStyle = StyleSheet.flatten(labelStyle || {}).color;\n\n    const activeColor =\n      activeColorCustom !== undefined\n        ? activeColorCustom\n        : typeof labelColorFromStyle === 'string'\n        ? labelColorFromStyle\n        : DEFAULT_ACTIVE_COLOR;\n    const inactiveColor =\n      inactiveColorCustom !== undefined\n        ? inactiveColorCustom\n        : typeof labelColorFromStyle === 'string'\n        ? labelColorFromStyle\n        : DEFAULT_INACTIVE_COLOR;\n\n    const activeOpacity = this.getActiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n    const inactiveOpacity = this.getInactiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n\n    let icon: React.ReactNode | null = null;\n    let label: React.ReactNode | null = null;\n\n    if (renderIcon) {\n      const activeIcon = renderIcon({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveIcon = renderIcon({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      if (inactiveIcon != null && activeIcon != null) {\n        icon = (\n          <View style={styles.icon}>\n            <Animated.View style={{ opacity: inactiveOpacity }}>\n              {inactiveIcon}\n            </Animated.View>\n            <Animated.View\n              style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n            >\n              {activeIcon}\n            </Animated.View>\n          </View>\n        );\n      }\n    }\n\n    const renderLabel =\n      renderLabelCustom !== undefined\n        ? renderLabelCustom\n        : ({ route, color }: { route: T; color: string }) => {\n            const labelText = getLabelText({ route });\n\n            if (typeof labelText === 'string') {\n              return (\n                <Animated.Text\n                  style={[\n                    styles.label,\n                    icon ? { marginTop: 0 } : null,\n                    labelStyle,\n                    { color },\n                  ]}\n                >\n                  {labelText}\n                </Animated.Text>\n              );\n            }\n\n            return labelText;\n          };\n\n    if (renderLabel) {\n      const activeLabel = renderLabel({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveLabel = renderLabel({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      label = (\n        <View>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveLabel}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeLabel}\n          </Animated.View>\n        </View>\n      );\n    }\n\n    const tabStyle = StyleSheet.flatten(style);\n    const isWidthSet = tabStyle?.width !== undefined;\n    const tabContainerStyle: ViewStyle | null = isWidthSet ? null : { flex: 1 };\n\n    const scene = { route };\n\n    let accessibilityLabel = getAccessibilityLabel(scene);\n\n    accessibilityLabel =\n      typeof accessibilityLabel !== 'undefined'\n        ? accessibilityLabel\n        : getLabelText(scene);\n\n    const badge = renderBadge ? renderBadge(scene) : null;\n\n    return (\n      <PlatformPressable\n        android_ripple={{ borderless: true }}\n        testID={getTestID(scene)}\n        accessible={getAccessible(scene)}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"tab\"\n        accessibilityState={{ selected: isFocused }}\n        // @ts-ignore: this is to support older React Native versions\n        accessibilityStates={isFocused ? ['selected'] : []}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        delayPressIn={0}\n        onLayout={onLayout}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        style={[styles.pressable, tabContainerStyle]}\n      >\n        <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n          {icon}\n          {label}\n          {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n        </View>\n      </PlatformPressable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    margin: 4,\n    backgroundColor: 'transparent',\n    textTransform: 'uppercase',\n  },\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  pressable: {\n    // The label is not pressable on Windows\n    // Adding backgroundColor: 'transparent' seems to fix it\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"}