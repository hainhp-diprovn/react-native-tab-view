{"version":3,"names":["TabView","onIndexChange","navigationState","renderScene","initialLayout","keyboardDismissMode","lazy","lazyPreloadDistance","onSwipeStart","onSwipeEnd","renderLazyPlaceholder","renderTabBar","props","sceneContainerStyle","style","swipeEnabled","tabBarPosition","disableAnimationForSetPage","layout","setLayout","React","useState","width","height","jumpToIndex","index","handleLayout","e","nativeEvent","prevLayout","styles","pager","position","render","addEnterListener","jumpTo","sceneRendererProps","routes","map","route","i","key","loading","StyleSheet","create","flex","overflow"],"sources":["TabView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport TabBar from './TabBar';\nimport SceneView from './SceneView';\nimport Pager from './Pager';\nimport type {\n  Layout,\n  NavigationState,\n  Route,\n  SceneRendererProps,\n  PagerProps,\n} from './types';\n\nexport type Props<T extends Route> = PagerProps & {\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  renderScene: (props: SceneRendererProps & { route: T }) => React.ReactNode;\n  renderLazyPlaceholder?: (props: { route: T }) => React.ReactNode;\n  renderTabBar?: (\n    props: SceneRendererProps & { navigationState: NavigationState<T> }\n  ) => React.ReactNode;\n  tabBarPosition?: 'top' | 'bottom';\n  initialLayout?: Partial<Layout>;\n  lazy?: ((props: { route: T }) => boolean) | boolean;\n  lazyPreloadDistance?: number;\n  sceneContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function TabView<T extends Route>({\n  onIndexChange,\n  navigationState,\n  renderScene,\n  initialLayout,\n  keyboardDismissMode = 'auto',\n  lazy = false,\n  lazyPreloadDistance = 0,\n  onSwipeStart,\n  onSwipeEnd,\n  renderLazyPlaceholder = () => null,\n  renderTabBar = (props) => <TabBar {...props} />,\n  sceneContainerStyle,\n  style,\n  swipeEnabled = true,\n  tabBarPosition = 'top',\n  disableAnimationForSetPage,\n}: Props<T>) {\n  const [layout, setLayout] = React.useState({\n    width: 0,\n    height: 0,\n    ...initialLayout,\n  });\n\n  const jumpToIndex = (index: number) => {\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((prevLayout) => {\n      if (prevLayout.width === width && prevLayout.height === height) {\n        return prevLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  return (\n    <View onLayout={handleLayout} style={[styles.pager, style]}>\n      <Pager\n        layout={layout}\n        navigationState={navigationState}\n        keyboardDismissMode={keyboardDismissMode}\n        swipeEnabled={swipeEnabled}\n        onSwipeStart={onSwipeStart}\n        onSwipeEnd={onSwipeEnd}\n        onIndexChange={jumpToIndex}\n        disableAnimationForSetPage={disableAnimationForSetPage}\n      >\n        {({ position, render, addEnterListener, jumpTo }) => {\n          // All of the props here must not change between re-renders\n          // This is crucial to optimizing the routes with PureComponent\n          const sceneRendererProps = {\n            position,\n            layout,\n            jumpTo,\n          };\n\n          return (\n            <React.Fragment>\n              {tabBarPosition === 'top' &&\n                renderTabBar({\n                  ...sceneRendererProps,\n                  navigationState,\n                })}\n              {render(\n                navigationState.routes.map((route, i) => {\n                  return (\n                    <SceneView\n                      {...sceneRendererProps}\n                      addEnterListener={addEnterListener}\n                      key={route.key}\n                      index={i}\n                      lazy={typeof lazy === 'function' ? lazy({ route }) : lazy}\n                      lazyPreloadDistance={lazyPreloadDistance}\n                      navigationState={navigationState}\n                      style={sceneContainerStyle}\n                    >\n                      {({ loading }) =>\n                        loading\n                          ? renderLazyPlaceholder({ route })\n                          : renderScene({\n                            ...sceneRendererProps,\n                            route,\n                          })\n                      }\n                    </SceneView>\n                  );\n                })\n              )}\n              {tabBarPosition === 'bottom' &&\n                renderTabBar({\n                  ...sceneRendererProps,\n                  navigationState,\n                })}\n            </React.Fragment>\n          );\n        }}\n      </Pager>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pager: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"}